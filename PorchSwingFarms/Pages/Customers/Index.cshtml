@page
@model PorchSwingFarms.Pages.Customers.IndexModel

@{
    ViewData["Title"] = "Customers";
}

<h1>Customers</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index"
               asp-route-pageSize="@Model.CurrentSize">
                Back to full List
            </a>
        </p>
    </div>
</form>

<p>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-currentFilter="@Model.CurrentFilter">
        10 per Page
    </a> |
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-pageSize="20">
        20 per Page
    </a> |
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-pageSize="50">
        50 per Page
    </a> |
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-pageSize="100">
        100 per Page
    </a> |
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-noPages="true">
        Max
    </a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].FirstName)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                    asp-route-currentFilter="@Model.CurrentFilter"
                   asp-route-pageSize="@Model.CurrentSize">
                    @Html.DisplayNameFor(model => model.Customers[0].LastName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.AddressSort"
                    asp-route-currentFilter="@Model.CurrentFilter"
                   asp-route-pageSize="@Model.CurrentSize">
                    @Html.DisplayNameFor(model => model.Customers[0].Address)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.CitySort"
                    asp-route-currentFilter="@Model.CurrentFilter"
                   asp-route-pageSize="@Model.CurrentSize">
                    @Html.DisplayNameFor(model => model.Customers[0].City)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].ZipCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Customers)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZipCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.CustomerID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.CustomerID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.CustomerID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Customers.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Customers.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Customers.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   asp-route-pageSize="@Model.CurrentSize"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Customers.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   asp-route-pageSize="@Model.CurrentSize"
   class="btn btn-primary @nextDisabled">
    Next
</a>

